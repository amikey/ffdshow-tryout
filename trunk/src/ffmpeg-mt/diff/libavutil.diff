--- internal.h	Sun Jan 25 13:19:04 2009
+++ internal.h	Sun Jan 25 13:07:28 2009
@@ -305,12 +305,18 @@
 /**
  * Returns NULL if CONFIG_SMALL is true otherwise the argument
  * without modifications, used to disable the definition of strings
  * (for example AVCodec long_names).
  */
 #if CONFIG_SMALL
 #   define NULL_IF_CONFIG_SMALL(x) NULL
 #else
 #   define NULL_IF_CONFIG_SMALL(x) x
 #endif
 
+#if HAVE_THREADS
+#   define ONLY_IF_THREADS_ENABLED(x) x
+#else
+#   define ONLY_IF_THREADS_ENABLED(x) NULL
+#endif
+
 #endif /* AVUTIL_INTERNAL_H */
--- log.c	Sun Jan 25 13:19:04 2009
+++ log.c	Sun Jan 25 13:07:28 2009
@@ -24,32 +24,35 @@
  * log.
  */
 
 #include "avutil.h"
 
 int av_log_level = AV_LOG_INFO;
 
 void av_log_default_callback(void* ptr, int level, const char* fmt, va_list vl)
 {
     static int print_prefix=1;
     AVClass* avc= ptr ? *(AVClass**)ptr : NULL;
+    char buf[1024];
+    int prefix_length=0;
     if(level>av_log_level)
         return;
 #undef fprintf
     if(print_prefix && avc) {
-        fprintf(stderr, "[%s @ %p]", avc->item_name(ptr), ptr);
+        prefix_length=snprintf(buf, sizeof(buf), "[%s @ %p]", avc->item_name(ptr), ptr);
     }
 
     print_prefix= strstr(fmt, "\n") != NULL;
 
-    vfprintf(stderr, fmt, vl);
+    vsnprintf(buf + prefix_length, sizeof(buf) - prefix_length, fmt, vl);
+    fputs(buf, stderr);
 }
 
 static void (*av_log_callback)(void*, int, const char*, va_list) = av_log_default_callback;
 
 void av_log(void* avcl, int level, const char *fmt, ...)
 {
     va_list vl;
     va_start(vl, fmt);
     av_vlog(avcl, level, fmt, vl);
     va_end(vl);
 }
--- mathematics.c	Sun Jan 25 13:19:04 2009
+++ mathematics.c	Sun Jan 25 13:07:28 2009
@@ -15,23 +15,22 @@
  *
  * You should have received a copy of the GNU Lesser General Public
  * License along with FFmpeg; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
 /**
  * @file mathematics.c
  * Miscellaneous math routines and tables.
  */
 
-#include <assert.h>
 #include "common.h"
 #include "mathematics.h"
 
 const uint8_t ff_sqrt_tab[256]={
   0, 16, 23, 28, 32, 36, 40, 43, 46, 48, 51, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 77, 79, 80, 82, 84, 85, 87, 88, 90,
  91, 92, 94, 95, 96, 98, 99,100,102,103,104,105,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,
 128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,144,145,146,147,148,149,150,151,151,152,153,154,155,156,156,
 157,158,159,160,160,161,162,163,164,164,165,166,167,168,168,169,170,171,171,172,173,174,174,175,176,176,177,178,179,179,180,181,
 182,182,183,184,184,185,186,186,187,188,188,189,190,190,191,192,192,193,194,194,195,196,196,197,198,198,199,200,200,201,202,202,
 203,204,204,205,205,206,207,207,208,208,209,210,210,211,212,212,213,213,214,215,215,216,216,217,218,218,219,219,220,220,221,222,
 222,223,223,224,224,225,226,226,227,227,228,228,229,230,230,231,231,232,232,233,233,234,235,235,236,236,237,237,238,238,239,239,
--- mem.c	Sun Jan 25 13:19:04 2009
+++ mem.c	Sun Jan 25 13:07:28 2009
@@ -16,33 +16,30 @@
  *
  * You should have received a copy of the GNU Lesser General Public
  * License along with FFmpeg; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
 /**
  * @file mem.c
  * default memory allocator for libavutil.
  */
 
-#include "config.h"
 #include "common.h"
 
 /* here we can use OS dependent allocation functions */
 #undef malloc
 #undef free
 #undef realloc
 
-#include <limits.h>
 #include <stdlib.h>
-#include <string.h>
 #if HAVE_MALLOC_H
 #include <malloc.h>
 #endif
 
 /* you can redefine av_malloc and av_free in your project to use your
    memory allocator. You do not need to suppress this file because the
    linker will do it automatically */
 
 void *av_malloc(unsigned int size)
 {
     void *ptr = NULL;
--- mem.h	Sun Jan 25 13:19:04 2009
+++ mem.h	Sun Jan 25 13:07:28 2009
@@ -18,23 +18,22 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
 /**
  * @file mem.h
  * Memory handling functions.
  */
 
 #ifndef AVUTIL_MEM_H
 #define AVUTIL_MEM_H
 
-#include "config.h"
 #include "common.h"
 
 #if defined(__ICC) || defined(__SUNPRO_C)
     #define DECLARE_ALIGNED(n,t,v)      t v __attribute__ ((aligned (n)))
     #define DECLARE_ASM_CONST(n,t,v)    const t __attribute__ ((aligned (n))) v
 #elif defined(__GNUC__)
     #define DECLARE_ALIGNED(n,t,v)      t v __attribute__ ((aligned (n)))
     #define DECLARE_ASM_CONST(n,t,v)    static const t v attribute_used __attribute__ ((aligned (n)))
 #elif defined(_MSC_VER)
     #define DECLARE_ALIGNED(n,t,v)      __declspec(align(n)) t v
     #define DECLARE_ASM_CONST(n,t,v)    __declspec(align(n)) static const t v
--- rational.c	Sun Jan 25 13:19:04 2009
+++ rational.c	Sun Jan 25 13:07:28 2009
@@ -17,23 +17,22 @@
  * You should have received a copy of the GNU Lesser General Public
  * License along with FFmpeg; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
  */
 
 /**
  * @file rational.c
  * Rational numbers
  * @author Michael Niedermayer <michaelni@gmx.at>
  */
 
-#include <assert.h>
 //#include <math.h>
 #include <limits.h>
 
 #include "common.h"
 #include "mathematics.h"
 #include "rational.h"
 
 int av_reduce(int *dst_nom, int *dst_den, int64_t nom, int64_t den, int64_t max){
     AVRational a0={0,1}, a1={1,0};
     int sign= (nom<0) ^ (den<0);
     int64_t gcd= av_gcd(FFABS(nom), FFABS(den));
